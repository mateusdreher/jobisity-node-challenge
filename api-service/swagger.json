{
	"openapi": "3.1.0",
	"info": {
	  "title": "Service API",
	  "description": "API to deal with stock consults",
	  "version": "1.0.0"
	},
	"paths": {
	  "/users": {
		"post": {
		  "description": "Register a new user",
		  "requestBody": {
			"description": "User registration data",
			"content": {
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/RegisterUser"
				}
			  }
			}
		  },
		  "responses": {
			"201": {
			  "description": "User successfully registered",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/RegisterUserResponse"
				  }
				}
			  }
			},
			"422": {
			  "description": "Invalid payload",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorUnprocessableEntity"
				  }
				}
			  }
			},
			"409": {
			  "description": "User already exists",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorConflict"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/users/login": {
		"post": {
		  "description": "User login",
		  "requestBody": {
			"description": "Request a JWT token",
			"content": {
			  "application/json": {
				"schema": {
				  "$ref": "#/components/schemas/Login"
				}
			  }
			}
		  },
		  "responses": {
			"200": {
			  "description": "User successfully logged in",
			  "content": {
				"application/json": {
				  "schema": {
					"type": "object",
					"properties": {
					  "token": {
						"type": "string",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
					  }
					}
				  }
				}
			  }
			},
			"404": {
			  "description": "User not found",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorNotFound"
				  }
				}
			  }
			},
			"401": {
			  "description": "Invalid email or password",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorUnauthorized"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/users/history": {
		"get": {
		  "description": "Get user's stock consult history",
		  "security": [
			{
			  "bearerAuth": []
			}
		  ],
		  "responses": {
			"200": {
			  "description": "History successfully retrieved",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/HistoryResponse"
				  }
				}
			  }
			},
			"404": {
			  "description": "User not found",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorNotFound"
				  }
				}
			  }
			},
			"401": {
			  "description": "Invalid authentication token",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorUnauthorized"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/users/stats": {
		"get": {
		  "description": "Get statistics for the 5 most consulted stocks",
		  "security": [
			{
			  "bearerAuth": []
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Statistics successfully fetched",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/Stats"
				  }
				}
			  }
			},
			"403": {
			  "description": "User does not have sufficient permissions",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorForbidden"
				  }
				}
			  }
			},
			"401": {
			  "description": "Invalid authentication token",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorUnauthorized"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/users/stock": {
		"get": {
		  "description": "Consult a stock",
		  "security": [
			{
			  "bearerAuth": []
			}
		  ],
		  "parameters": [
			{
			  "in": "query",
			  "name": "q",
			  "description": "Stock symbol to consult",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Stock successfully fetched",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/Stock"
				  }
				}
			  }
			},
			"404": {
			  "description": "Stock not found",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorNotFound"
				  }
				}
			  }
			},
			"401": {
			  "description": "Invalid authentication token",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorUnauthorized"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/users/reset-password": {
		"post": {
		  "description": "Reset password from user",
		  "requestBody": {
			"description": "User email",
			"content": {
			  "application/json": {
				"schema": {
					"type": "object",
					"properties": {
					  "email": {
						"type": "string",
						"example": "email@email.com"
					  }
					}
				}
			  }
			}
		  },
		  "responses": {
			"201": {
			  "description": "Password successfully reset",
			  "content": {
				"string": {
				  "example": "Your password has been successfully reset and a new one has been sent to your email address."
				}
			  }
			},
			"422": {
			  "description": "Invalid payload",
			  "content": {
				"application/json": {
				  "schema": {
					"$ref": "#/components/schemas/ErrorUnprocessableEntity"
				  }
				}
			  }
			},
			"404": {
				"description": "User not found",
				"content": {
				  "application/json": {
					"schema": {
					  "$ref": "#/components/schemas/ErrorNotFound"
					}
				  }
				}
			  }
		  }
		}
	  }
	},
	"components": {
	  "schemas": {
		"RegisterUser": {
		  "type": "object",
		  "properties": {
			"email": {
			  "type": "string",
			  "example": "email@email.com"
			},
			"role": {
			  "enum": ["admin", "user"],
			  "example": "admin"
			}
		  }
		},
		"RegisterUserResponse": {
		  "type": "object",
		  "properties": {
			"email": {
			  "type": "string",
			  "example": "email@email.com"
			},
			"password": {
			  "type": "string",
			  "example": "G6%fdsaf%"
			}
		  }
		},
		"Login": {
		  "type": "object",
		  "properties": {
			"email": {
			  "type": "string",
			  "example": "email@email.com"
			},
			"password": {
			  "type": "string",
			  "example": "G6%fdsaf%"
			}
		  }
		},
		"HistoryResponse": {
		  "type": "array",
		  "items": {
			"type": "object",
			"properties": {
			  "date": {
				"type": "string",
				"example": "2021-04-01T19:20:30Z"
			  },
			  "name": {
				"type": "string",
				"example": "APPLE"
			  },
			  "symbol": {
				"type": "string",
				"example": "AAPL.US"
			  },
			  "open": {
				"type": "number",
				"example": 123.66
			  },
			  "high": {
				"type": "number",
				"example": 123.66
			  },
			  "low": {
				"type": "number",
				"example": 122
			  },
			  "close": {
				"type": "number",
				"example": 123
			  }
			}
		  }
		},
		"Stats": {
		  "type": "array",
		  "items": {
			"type": "object",
			"properties": {
			  "stock": {
				"type": "string",
				"example": "AAPL.US"
			  },
			  "times_requested": {
				"type": "integer",
				"example": 3
			  }
			}
		  }
		},
		"Stock": {
		  "type": "object",
		  "properties": {
			"name": {
			  "type": "string",
			  "example": "APPLE"
			},
			"symbol": {
			  "type": "string",
			  "example": "AAPL.US"
			},
			"open": {
			  "type": "number",
			  "example": 123.66
			},
			"high": {
			  "type": "number",
			  "example": 123.66
			},
			"low": {
			  "type": "number",
			  "example": 122
			},
			"close": {
			  "type": "number",
			  "example": 123
			}
		  }
		},
		"ErrorUnprocessableEntity": {
		  "type": "object",
		  "properties": {
			"errorType": {
			  "type": "string",
			  "example": "UnprocessableEntity"
			},
			"message": {
			  "type": "string",
			  "example": "Review your payload"
			}
		  }
		},
		"ErrorConflict": {
		  "type": "object",
		  "properties": {
			"errorType": {
			  "type": "string",
			  "example": "Conflict"
			},
			"message": {
			  "type": "string",
			  "example": "Resource already exists"
			}
		  }
		},
		"ErrorNotFound": {
		  "type": "object",
		  "properties": {
			"errorType": {
			  "type": "string",
			  "example": "NotFound"
			},
			"message": {
			  "type": "string",
			  "example": "Resource not found"
			}
		  }
		},
		"ErrorUnauthorized": {
		  "type": "object",
		  "properties": {
			"errorType": {
			  "type": "string",
			  "example": "Unauthorized"
			},
			"message": {
			  "type": "string",
			  "example": "Invalid credentials"
			}
		  }
		},
		"ErrorForbidden": {
		  "type": "object",
		  "properties": {
			"errorType": {
			  "type": "string",
			  "example": "Forbidden"
			},
			"message": {
			  "type": "string",
			  "example": "You do not have sufficient permissions to perform this action"
			}
		  }
		}
	  },
	  "securitySchemes": {
		"bearerAuth": {
		  "description": "Bearer token authentication using JWT",
		  "type": "http",
		  "scheme": "bearer",
		  "bearerFormat": "JWT"
		}
	  }
	}
  }
  